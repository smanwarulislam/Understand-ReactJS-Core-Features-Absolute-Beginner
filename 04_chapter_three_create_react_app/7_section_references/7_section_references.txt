7. Section References

এই চ্যাপ্টারে আমরা আলোচনা করেছি Create React App (create-react-app), React (also known as React.js or ReactJS) এর CLI (Command-Line Interface) টুলসটি নিয়ে।
এই টুলসটি ব্যবহার করে আপনি খুব সহজেই একটা ReactJS অ্যাপ্লিকেশন তৈরি করতে পারবেন।
React অ্যাপ্লিকেশনে যা যা ফিচার আপনার দরকার তার সমস্ত সাপোর্ট আপনাকে দিবে Create React App (create-react-app).

Create React App (create-react-app) আপনাকে মূলত নিচের সুবিধাগুলো দিয়ে থাকে -

· ডেভেলপমেন্ট সার্ভার
· কোড অপ্টিমাইজেশান
· Babel (or Babel.js) এবং Webpack বয়লারপ্লেট প্রোজেক্ট সেটআপ
· CSS, CSS Module, Sass, Pre & Post Processors CSS এর সাপোর্ট
· Image, Fonts, and File নিয়ে কাজ করার সহজ সিস্টেম
· Flow (https://flow.org/), TypeScript, and Relay (https://relay.dev/) ইন্টিগ্রেশন
· Environment Variables এর ফ্যাসিলিটিস
· Testing Environment Using Jest
· Proxy ব্যবহার করে সার্ভার ইন্টিগ্রেশন
· Built-in Development and Production Scripts

উপরউক্ত ফিচারগুলো (উপরের বৈশিষ্ট্যগুলি) পাওয়ার জন্য আপনার নিজে থেকে তেমন কিছুই করতে হবে না আবার কিছু ক্ষেত্রে অল্প কিছু কাজ করতে হতেও পারে।

Create React App (create-react-app) আমাদেরকে চারটি স্ক্রিপ্ট প্রোভাইড করে থাকে -

· start -
এই স্ক্রিপ্টের মাধ্যমে আপনি কমান্ড লাইন ইন্টারফেস থেকে আপনার অ্যাপ্লিকেশনটা ডেভেলপমেন্ট সার্ভারে ওপেন করতে পারবেন।
এটা আপনার জন্য একটা Node.js সার্ভার রানিং করবে এবং React অ্যাপ্লিকেশনটাকে স্ট্যাটিক ফাইল হিসেবে সার্ভ করবে। এর সাথে আপনি Hot Module Replacement এর সুবিধাও পাবেন।
এই কমান্ডটি আপনি এভাবে ব্যবহার করতে পারেন -
npm start
or
yarn start

· build -
যখন আপনার অ্যাপ্লিকেশন ডেপলয় করার জন্য তৈরি হয়ে যাবে তখন আপনি এই কমান্ডটার মাধ্যমে আপনার প্রোজেক্ট বিল্ড করবেন।
এটা প্রয়োজন মতো আপনার কোডকে
· অপ্টিমাইজ করবে
· মিনিফাই করবে
· সোর্স ম্যাপ তৈরি করবে
· CSS ফাইল জেনারেট করবে
· ফাইল এবং ইমেজ গুলোকে অপ্টিমাইজ করবে
· সোর্স কোডগুলোকে চাংকে রূপান্তর করবে
· আরও অনেক কিছু করবে

· একটা অ্যাপ্লিকেশন প্রোডাকশনে পাঠানোর জন্য যতোটা অপ্টিমাইজেশনের দরকার হয়, তার সবটাই করবে এই কমান্ডটা এবং এর জন্য আমাদের কোনো কনফিগারেশনের দরকার নেই।
তারপরেও কিছু অ্যাপ্লিকেশন আছে যেখানে আমাদের নিজেদের মতো করে অপ্টিমাইজেশনের দরকার পড়ে, সেই ক্ষেত্রে আমরা নিজেরাও বিল্ট-ইন কনফিগারেশনকে মডিফাই করতে পারবো।
এর জন্য কমান্ডটি হচ্ছে -
npm run build
or
yarn build

· test -
Create React App (create-react-app) আমাদেরকে একটা প্রোপার টেস্টিং এনভায়রনমেন্ট প্রোভাইড করে থাকে।
এই এনভায়রনমেন্ট এ কোন এক্সট্রা টুলস সেটআপ না করেই আমরা React Application টেস্ট করতে পারি।
তবে অ্যাডভান্সড টেস্টিং এর জন্য অন্য প্যাকেজ বা মডুউলের সাহায্য লাগবে।
টেস্টিং এর কমান্ড হচ্ছে -
npm test
or
yarn test

· eject -
আপনি যখন Create React App (create-react-app) ব্যবহার করে একটা অ্যাপ্লিকেশন তৈরি করবেন তখন সমস্ত কনফিগারেশন ফাইল এবং স্ক্রিপ্ট ফাইলগুলো হিডেন থাকবে।
এই সব ফাইলগুলো পেতে চাইলে এই কমান্ডটি ব্যবহার করতে হবে।
Create React App (create-react-app) যেই কনফিগারেশনটা আমাদেরকে দেয় সেটা সবসময় পরিবর্তন করার দরকার হয় না।
আর আপনি ভুল করে যেন সেগুলোকে আপডেট করে না ফেলেন এই জন্যই ফাইলগুলোকে হিডেন রাখা হয়।
যদি কোনো কারনে আমাদের এই ফাইলগুলো আপডেট করার প্রয়োজন হয় তখন আমরা এই কমান্ডটি ব্যবহার করে থাকি।
তবে একবার eject করার পরে আর চাইলেও Roll Back করে আগের অবস্থানে ফিরে আসা যায় না। তাই একদম নিশ্চিত না হয়ে এই কমান্ডটি ব্যবহার করবেন না।
এই কমান্ডটি ব্যবহার করতে হয় এইভাবে -
npm run eject

[Note: আপনার পিসিতে yarn ইন্সটল করা না থাকলে প্রথমে এই প্যাকেজটা গ্লোবালই ইন্সটল করে নিবেন -
রেফারেন্স লিংকঃ
https://yarnpkg.com/getting-started/install
https://www.linuxjournal.com/content/installing-and-using-yarn-ubuntu
]

Create React App (create-react-app) ব্যবহার করে কোনো অ্যাপ্লিকেশন তৈরি করলে
আপনি সেখানে সাধারণ নোড অ্যাপ্লিকেশন এর মতো করেই যে কোনো ডিপেন্ডেন্সি ইন্সটল করতে পারবেন, নিজস্ব স্ক্রিপ্টও লিখতে পারবেন।